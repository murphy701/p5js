var s=[];
var scl = 20;
var food;
var sp;
let color = 0;
playfield = 600;
let pg;
let button;

function setup() {
  createCanvas(playfield, 640);
  background(51);  
  s[0] = new Snake();
  s[1] = new Snake();
  s[1].x=0;
  s[1].y=640;
  frameRate (20);
  pickLocation();
  picksLocation();
  pg=createGraphics(700, 700);

}
function draw() {
  background(51);
  scoreboard();
  for (let i = 0; i < 2; i++) {
    color = i;
    if (s[i].eat(food)) {      
    pickLocation();    
    }
    s[i].death();   
    s[i].update();   
    s[i].show();
  }
  
  fill (200,100,0);
  rect(food.x,food.y, scl, scl);
  
  fill(255,0,0);
  rect(sp.x,sp.y, scl, scl);
  
  for(let i=0;i<2;i++){
    if(s[i].eat(sp)){
      pg.background(255);
      pg.noFill();
      pg.stroke(255);
      image(pg, 10,10);
      picksLocation();
      pickLocation();
    }
  }
  
  if(s[0].score>15){
    textSize(200);
    fill(255);
    text('1p win', 10, 320);

  } else if(s[1].score>15){
    textSize(200);
    fill('#FFD400');
    text('2p win', 10, 320);  
  }
}

function pickLocation() {
  var cols = floor(playfield/scl);
  var rows = floor(playfield/scl);
  food = createVector(floor(random(cols)), floor(random(rows)));
  food.mult(scl);

  for (var i = 0; i < s[i].tail.length; i++) {
    var pos = s[i].tail[i];
    var d = dist(food.x, food.y, pos.x, pos.y);
    if (d < 1) {
      pickLocation();
    }
  }
}

function picksLocation() {
  var cols = floor(playfield/scl);
  var rows = floor(playfield/scl);
  sp = createVector(floor(random(cols)), floor(random(rows)));
  sp.mult(scl);

  for (var i = 0; i < s[i].tail.length; i++) {
    var poss = s[i].tail[i];
    var k = dist(sp.x, sp.y, poss.x, poss.y);
    if (k < 1) {
      picksLocation();
    }
  }
  
}

function scoreboard() {
  fill(0);      
  rect(0, 600, 600, 40);
  fill(255);   
  textFont("Georgia");
  textSize(18);    
  text("1P Score: ", 10, 625);
  text("2P Score: ", 200, 625);
  text("Highscore: ", 450, 625);
  text(s[0].score, 90, 625);
  text(s[1].score, 280, 625);
  if (s[0].highscore >= s[1].highscore) {
    text(s[0].highscore, 540, 625);
  } else text(s[1].highscore, 540, 625);
}

function keyPressed() {
  if (keyCode === UP_ARROW ){   s[0].dir(0, -1);
  }else if (keyCode === DOWN_ARROW) {     s[0].dir(0, 1);
  }else if (keyCode === RIGHT_ARROW) {     s[0].dir (1, 0);
  }else if (keyCode === LEFT_ARROW) {       s[0].dir (-1, 0);    }
  
  if (keyCode === 87 ){   s[1].dir(0, -1);
  }else if (keyCode === 83) {     s[1].dir(0, 1);
  }else if (keyCode === 68) {     s[1].dir (1, 0);
  }else if (keyCode === 65) {       s[1].dir (-1, 0);    }
}


function Snake() {
  this.x =0;
  this.y =0;
  this.xspeed = 1;
  this.yspeed = 0;
  this.total = 0;
  this.tail = [];
  this.score = 0;
  this.highscore = 0;

  this.dir = function(x,y) {
    this.xspeed = x;
    this.yspeed = y;
  }

  this.eat = function(pos) {
    var d = dist(this.x, this.y, pos.x, pos.y);
    if (d < 1) {
      this.total++;
      this.score++;
      text(this.score, 70, 625);
      if (this.score > this.highscore) {
        this.highscore = this.score;
      }
      text(this.highscore, 540, 625);
      return true;
    } else {
      return false;
    }
  }
  
  this.sp=function(poss){
    var k=dist(this.x, this.y, poss.x, poss.y);
    if(k<1){
      this.dir=this.dir+1;
    }
  }
  
  this.death = function() {
    for (var i = 0; i < this.tail.length; i++) {
      var pos = this.tail[i];
      var d = dist(this.x, this.y, pos.x, pos.y);
      if (d < 1) {
        this.total = 0;
        this.score = 0;
        this.tail = [];
      }
    }
  }

  this.update = function(){
    if (this.total === this.tail.length) {
      for (var i = 0; i < this.tail.length-1; i++) {
        this.tail[i] = this.tail[i+1];
    }

    }
    this.tail[this.total-1] = createVector(this.x, this.y);

    this.x = this.x + this.xspeed*scl;
    this.y = this.y + this.yspeed*scl;
    this.x = constrain(this.x, 0, playfield-scl);
    this.y = constrain(this.y, 0, playfield-scl);

  }
  this.show = function(){
    if (color == 0) {
      fill(255);
    } else fill('#FFD400');
    for (var i = 0; i < this.tail.length; i++) {
        rect(this.tail[i].x, this.tail[i].y, scl, scl);
    }
    rect(this.x, this.y, scl, scl);
  }
 }
